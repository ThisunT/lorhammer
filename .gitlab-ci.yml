image: registry.gitlab.com/itk.fr/lorhammer/build

before_script:
    - ln -s /builds/$CI_PROJECT_PATH /go/src/lorhammer
    - cd /go/src/lorhammer
    - ./install.sh

stages:
    - lint
    - test
    - integration
    - compile
    - doc

lint:gofmt:
    stage: lint
    script:
        - diff -u <(echo -n) <(gofmt -d ./src)
        - if [ $? -eq 0 ]; then echo "code formatted"; else echo "run > gofmt -w -d ./src" && exit 1; fi

lint:vet:
    stage: lint
    script:
        - go tool vet -composites=false -shadow=true src/**/*.go

test:unit:
    stage: test
    script:
        - go test -race $(go list ./src/...)

test:coverage:
    stage: test
    coverage: /total[^\d]+(\d+.\d+\%)/
    script:
        - ./resources/scripts/cover.sh -terminal

test:docker:lorhammer:
  stage: test
  services:
    - docker:dind
  script:
    - ./resources/scripts/buildAllEnv.sh --snapshot
    - docker build -t registry.gitlab.com/itk.fr/lorhammer/lorhammer -f docker/lorhammer/Dockerfile-lorhammer .
  variables:
    DOCKER_HOST: "tcp://docker:2375"

test:docker:orchestrator:
  stage: test
  services:
    - docker:dind
  script:
    - ./resources/scripts/buildAllEnv.sh --snapshot
    - docker build -t registry.gitlab.com/itk.fr/lorhammer/orchestrator -f docker/lorhammer/Dockerfile-orchestrator .
  variables:
    DOCKER_HOST: "tcp://docker:2375"

.integration: &integration
  stage: integration
  services:
    - docker:dind
  script:
    - LORHAMMER_PROMETHEUS_IP="prometheus" LORHAMMER_MQTT_IP="mqtt" LORHAMMER_CONSUL_IP="consul" LORHAMMER_GRAFANA_IP="grafana" ./resources/scripts/launchTools.sh
    - sleep 10
    - echo "Start 1 lorhammer"
    - docker-compose -f docker-compose.yml -f docker-compose.integration.yml -p ${CI_JOB_ID} up -d lorhammer
    - sleep 30
    - echo "Start orchestrator to launch scenario and check all is ok"
    - docker-compose -f docker-compose.yml -f docker-compose.integration.yml -p ${CI_JOB_ID} run orchestrator
  after_script:
    - docker-compose -p ${CI_JOB_ID} down --remove-orphans
  tags:
    - docker

integration:oneShot:
  <<: *integration
  variables:
    FROM_FILE: "./resources/scenarios/ci/ci-integration-oneShot.json"
    DOCKER_HOST: "tcp://docker:2375"
    COMPOSE_HTTP_TIMEOUT: "200"

integration:ramp:
  <<: *integration
  variables:
    FROM_FILE: "./resources/scenarios/ci/ci-integration-ramp.json"
    DOCKER_HOST: "tcp://docker:2375"
    COMPOSE_HTTP_TIMEOUT: "200"

integration:repeat:
  <<: *integration
  variables:
    FROM_FILE: "./resources/scenarios/ci/ci-integration-repeat.json"
    DOCKER_HOST: "tcp://docker:2375"
    COMPOSE_HTTP_TIMEOUT: "200"

compile:all:
  stage: compile
  script:
    - ./resources/scripts/buildAllEnv.sh --snapshot
  only:
    - master@itk.fr/lorhammer
  artifacts:
    paths:
      - dist
    expire_in: 1 week

compile:docker:lorhammer:
  stage: compile
  services:
    - docker:dind
  script:
    - ./resources/scripts/buildAllEnv.sh --snapshot
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/itk.fr/lorhammer/lorhammer -f docker/lorhammer/Dockerfile-lorhammer .
    - docker push registry.gitlab.com/itk.fr/lorhammer/lorhammer
  only:
    - master@itk.fr/lorhammer
  variables:
    DOCKER_HOST: "tcp://docker:2375"

compile:docker:orchestrator:
  stage: compile
  services:
    - docker:dind
  script:
    - ./resources/scripts/buildAllEnv.sh --snapshot
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/itk.fr/lorhammer/orchestrator -f docker/lorhammer/Dockerfile-orchestrator .
    - docker push registry.gitlab.com/itk.fr/lorhammer/orchestrator
  only:
    - master@itk.fr/lorhammer
  variables:
    DOCKER_HOST: "tcp://docker:2375"

compile:tag:
  stage: compile
  script:
    - ./resources/scripts/buildAllEnv.sh
  only:
    - tags
  artifacts:
    paths:
      - dist

compile:docker-tag:lorhammer:
  stage: compile
  services:
    - docker:dind
  script:
    - ./resources/scripts/buildAllEnv.sh
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/itk.fr/lorhammer/lorhammer -f docker/lorhammer/Dockerfile-lorhammer .
    - docker push registry.gitlab.com/itk.fr/lorhammer/lorhammer:${CI_COMMIT_REF_NAME}
  only:
    - tags
  variables:
    DOCKER_HOST: "tcp://docker:2375"

compile:docker-tag:orchestrator:
  stage: compile
  services:
    - docker:dind
  script:
    - ./resources/scripts/buildAllEnv.sh
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t registry.gitlab.com/itk.fr/lorhammer/orchestrator -f docker/lorhammer/Dockerfile-orchestrator .
    - docker push registry.gitlab.com/itk.fr/lorhammer/orchestrator:${CI_COMMIT_REF_NAME}
  only:
    - tags
  variables:
    DOCKER_HOST: "tcp://docker:2375"

pages:
  stage: doc
  script:
    - resources/scripts/makeDoc.sh
    - rm -rf doc/public
    - mv doc/public_min public
  artifacts:
    paths:
      - public
  only:
    - master
